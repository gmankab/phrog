name: x86-64

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      # selecting a toolchain either by action or manual `rustup` calls should happen
      # before the plugin, as the cache uses the current rustc version as its cache key
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with: {}
      - name: apt-get deps
        run: |
          set -uexo pipefail
          export DEBIAN_FRONTEND=noninteractive
          # for phrog tests
          sudo apt-get install -y phoc xvfb wf-recorder
      - name: build phosh
        run: |
          set -uexo pipefail
          git clone https://gitlab.gnome.org/World/Phosh/phosh.git
          cd phosh
          sudo apt-get -y build-dep ./phosh
          meson setup --prefix=/usr -Dbindings-lib=true _build .
          sudo meson install -C _build
      - name: build gmobile
        run: |
          set -uexo pipefail
          git clone https://gitlab.gnome.org/World/Phosh/gmobile.git
          cd gmobile
          meson setup --prefix=/usr _build .
          sudo meson install -C _build
      - name: Build
        run: |
          set -uexo pipefail
          cargo build --all-targets --verbose
      - name: Test
        run: |
          set -uexo pipefail
          # Install phrog schemas so the tests can run.
          mkdir -p $HOME/.local/share/glib-2.0/schemas/
          cp resources/com.samcday.phrog.gschema.xml $HOME/.local/share/glib-2.0/schemas/
          glib-compile-schemas $HOME/.local/share/glib-2.0/schemas/
          # start phoc + wf-recorder
          dbus-run-session xvfb-run -a -s -noreset phoc -E "wf-recorder -f tests.mp4" &
          export WAYLAND_DISPLAY=wayland-0
          trap "pkill phoc; sleep 1" EXIT
          # wait some moments for compositor startup. would be better to properly parse out the
          # display name and readiness state from phoc stdout.
          sleep 3
          # run tests
          cargo test --verbose -- --test-threads=1 --nocapture
      - uses: actions/upload-artifact@v4
        with:
          name: x86-64-debug
          path: target/debug/phrog
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-recording
          path: tests.mp4
