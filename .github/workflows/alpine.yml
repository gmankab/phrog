name: alpine

on:
  push:
    branches: [main]
    tags: ['*']
  pull_request:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  alpine:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]
    # Always build x64 in main + PRs, but only other architectures for tagged releases
    if: ${{ matrix.arch == 'x86_64' || startsWith(github.ref, 'refs/tags/') }}
    steps:
      - uses: actions/checkout@v4
      - uses: jirutka/setup-alpine@v1
        id: alpine
        with:
          arch: ${{ matrix.arch }}
          branch: edge
          packages: alpine-sdk
      # building and statically linking libphosh on qemu-user-emulated platforms is excruciatingly
      # slow. Having one platform be statically linked to test that path is enough.
      - name: disable statically linked libphosh
        if: ${{ matrix.arch != 'x86_64' }}
        run: |
          sed -i -e 's/_static=1/_static=/' APKBUILD
      - name: setup
        env:
          RSA_PRIV: ${{ secrets.RSA_PRIVATE_KEY }}
          RSA_PUB: ${{ secrets.RSA_PUBLIC_KEY }}
        run: |
          mkdir -p ~/.abuild
          echo "$RSA_PRIV" > ~/.abuild/key.rsa
          echo "$RSA_PUB" > ~/.abuild/key.rsa.pub
          cp ~/.abuild/key.rsa.pub /etc/apk/keys/key.rsa.pub
          abuild -F deps
        shell: alpine.sh --root {0}
      - name: build package
        run: |
          export PACKAGER_PRIVKEY=$HOME/.abuild/key.rsa
          sed -i -e "s/_commit=main/_commit=$GITHUB_SHA/" APKBUILD
          abuild -F checksum
          abuild -F -P /packages
          chmod -R 777 /packages
        shell: alpine.sh --root {0}
      - uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.arch }}
          path: ${{ steps.alpine.outputs.root-path }}/packages/phrog/${{ matrix.arch }}/
