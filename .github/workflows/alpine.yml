name: alpine

on:
  push:
    branches: [main]
  workflow_dispatch: {}
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  alpine:
    runs-on: ubuntu-24.04${{ matrix.arch == 'aarch64' && '-arm' || '' }}
    strategy:
      matrix:
        arch:
          - x86_64
          - aarch64
    steps:
      - uses: actions/checkout@v4
      # Using fork (aarch64 branch from bgilbert/setup-alpine) until jirutka/setup-alpine#11 is resolved
      - uses: samcday/setup-alpine@main
        id: alpine
        with:
          arch: ${{ matrix.arch }}
          branch: edge
          packages: alpine-sdk
      - name: setup
        env:
          RSA_PRIV: ${{ secrets.RSA_PRIVATE_KEY }}
          RSA_PUB: ${{ secrets.RSA_PUBLIC_KEY }}
        run: |
          mkdir -p ~/.abuild
          echo "$RSA_PRIV" > ~/.abuild/key.rsa
          echo "$RSA_PUB" > ~/.abuild/key.rsa.pub
          cp ~/.abuild/key.rsa.pub /etc/apk/keys/key.rsa.pub
          abuild -F deps
        shell: alpine.sh --root {0}
      - name: update sha
        if: github.event_name != 'release'
        run: |
          sed -i -e "s/^_gitrev=main$/_gitrev=$GITHUB_SHA/" APKBUILD
      - name: release prep
        if: github.event_name == 'release'
        run: |
          # Remove _git suffix to indicate the stable release.
          # Assumes that the base (unsuffixed) pkgver was already updated to the new version in release commit.
          sed -i -e 's/^\(pkgver=.*\)_git$/\1/' APKBUILD
          # Delete _gitrev= var and rewrite usages to pkgver
          sed -i -e '/^_gitrev=/d' -e 's/_gitrev/pkgver/g' APKBUILD
      - name: build package
        run: |
          export PACKAGER_PRIVKEY=$HOME/.abuild/key.rsa
          abuild -F checksum
          abuild -F -P /packages
          chmod -R 777 /packages
        shell: alpine.sh --root {0}
      - uses: actions/upload-artifact@v4
        if: github.event_name == 'release' && matrix.arch == 'x86_64'
        with:
          name: APKBUILD
          path: ${{ steps.alpine.outputs.root-path }}/APKBUILD
      - uses: actions/upload-artifact@v4
        with:
          name: packages-${{ matrix.arch }}
          path: ${{ steps.alpine.outputs.root-path }}/packages/phrog/${{ matrix.arch }}/*.apk
      - name: upload demo artifacts to release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'release'
        with:
          name: ${{ github.event.release.name }}
          files: |
            ${{ steps.alpine.outputs.root-path }}/packages/phrog/${{ matrix.arch }}/*.apk
