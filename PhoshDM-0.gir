<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gtk" version="3.0"/>
  <package name="phosh-dm-0"/>
  <namespace name="PhoshDM"
             version="0"
             shared-library="libphosh.so"
             c:identifier-prefixes="Phosh"
             c:symbol-prefixes="phosh">
    <class name="LayerSurface"
           c:symbol-prefix="layer_surface"
           c:type="PhoshLayerSurface"
           parent="Gtk.Window"
           glib:type-name="PhoshLayerSurface"
           glib:get-type="phosh_layer_surface_get_type"
           glib:type-struct="LayerSurfaceClass">
      <source-position filename="src/layersurface.h" line="31"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <virtual-method name="configured">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="22">invoked when layer surface is configured</doc>
        <source-position filename="src/layersurface.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="LayerSurface" c:type="PhoshLayerSurface*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <property name="anchor"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="configured-height"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="configured-width"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="exclusive-zone"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="height"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="kbd-interactivity"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="layer"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="layer-shell" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <property name="margin-bottom"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-left"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-right"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="margin-top"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="namespace" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="width"
                writable="1"
                transfer-ownership="none"
                default-value="0">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="wl-output" writable="1" transfer-ownership="none">
        <type name="gpointer" c:type="gpointer"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
      <glib:signal name="configured" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LayerSurfaceClass"
            c:type="PhoshLayerSurfaceClass"
            glib:is-gtype-struct-for="LayerSurface">
      <source-position filename="src/layersurface.h" line="31"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="21">The parent class</doc>
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="configured">
        <doc xml:space="preserve"
             filename="src/layersurface.h"
             line="22">invoked when layer surface is configured</doc>
        <callback name="configured">
          <source-position filename="src/layersurface.h" line="30"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="LayerSurface" c:type="PhoshLayerSurface*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Lockscreen"
           c:symbol-prefix="lockscreen"
           c:type="PhoshLockscreen"
           parent="LayerSurface"
           glib:type-name="PhoshLockscreen"
           glib:get-type="phosh_lockscreen_get_type"
           glib:type-struct="LockscreenClass">
      <source-position filename="src/lockscreen.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <method name="get_page" c:identifier="phosh_lockscreen_get_page">
        <source-position filename="src/lockscreen.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_page" c:identifier="phosh_lockscreen_set_page">
        <source-position filename="src/lockscreen.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Lockscreen" c:type="PhoshLockscreen*"/>
          </instance-parameter>
          <parameter name="page" transfer-ownership="none">
            <type name="LockscreenPage" c:type="PhoshLockscreenPage"/>
          </parameter>
        </parameters>
      </method>
      <property name="calls-manager"
                introspectable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type/>
      </property>
      <field name="parent_instance">
        <type name="LayerSurface" c:type="PhoshLayerSurface"/>
      </field>
      <glib:signal name="lockscreen-unlock" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="wakeup-output" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="LockscreenClass"
            c:type="PhoshLockscreenClass"
            glib:is-gtype-struct-for="Lockscreen">
      <source-position filename="src/lockscreen.h" line="34"/>
      <field name="parent_class">
        <type name="LayerSurfaceClass" c:type="PhoshLayerSurfaceClass"/>
      </field>
    </record>
    <enumeration name="LockscreenPage" c:type="PhoshLockscreenPage">
      <doc xml:space="preserve"
           filename="src/lockscreen.h"
           line="13">This enum indicates which page is shown on the lockscreen.
This helps #PhoshGnomeShellManager to decide when to emit
AcceleratorActivated events over DBus</doc>
      <source-position filename="src/lockscreen.h" line="25"/>
      <member name="default"
              value="0"
              c:identifier="PHOSH_LOCKSCREEN_PAGE_DEFAULT">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="15">The default locked page</doc>
      </member>
      <member name="unlock"
              value="1"
              c:identifier="PHOSH_LOCKSCREEN_PAGE_UNLOCK">
        <doc xml:space="preserve"
             filename="src/lockscreen.h"
             line="16">The unlock page (where PIN is entered)</doc>
      </member>
    </enumeration>
    <class name="Shell"
           c:symbol-prefix="shell"
           c:type="PhoshShell"
           parent="GObject.Object"
           glib:type-name="PhoshShell"
           glib:get-type="phosh_shell_get_type"
           glib:type-struct="ShellClass">
      <doc xml:space="preserve"
           filename="src/shell.c"
           line="96">The shell singleton

#PhoshShell is responsible for instantiating the GUI
parts of the shell#PhoshTopPanel, #PhoshHome,â€¦ and the managers that
interface with DBus #PhoshMonitorManager, #PhoshFeedbackManager, â€¦
and coordinates between them.</doc>
      <source-position filename="src/plugin-shell.h" line="18"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <function name="get_default" c:identifier="phosh_shell_get_default">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="2040">Get the shell singleton</doc>
        <source-position filename="src/plugin-shell.h" line="20"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="src/shell.c"
               line="2045">The shell singleton</doc>
          <type name="Shell" c:type="PhoshShell*"/>
        </return-value>
      </function>
      <property name="builtin-monitor"
                introspectable="0"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1187">The built in monitor. This is a hardware property and hence can
only be read. It can be %NULL when not present or disabled.</doc>
        <type/>
      </property>
      <property name="docked"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1176">Whether the device is currently docked. This mirrors the property
from #PhoshDockedManager for easier access.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="locked"
                writable="1"
                transfer-ownership="none"
                default-value="FALSE">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1166">Whether the screen is currently locked. This mirrors the property
from #PhoshLockscreenManager for easier access.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="primary-monitor"
                introspectable="0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="src/shell.c"
             line="1199">The primary monitor that has the panels, lock screen etc.</doc>
        <type/>
      </property>
      <property name="shell-state"
                introspectable="0"
                transfer-ownership="none"
                default-value="PHOSH_STATE_NONE">
        <type/>
      </property>
      <glib:signal name="ready" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ShellClass"
            c:type="PhoshShellClass"
            glib:is-gtype-struct-for="Shell">
      <source-position filename="src/plugin-shell.h" line="18"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
  </namespace>
</repository>
